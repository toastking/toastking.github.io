{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_6__","PostCard","styled","div","withConfig","displayName","componentId","CardContainer","DateText","ReadMore","p","FrontPagePost","props","node","item","a","createElement","to","fields","slug","frontmatter","title","excerpt","date","AccountDiv","AccountButton","AccountLabel","AccountLinks","href","icon","faTwitter","faGithub","faLinkedin","IndexPage","_ref","data","keywords","allMarkdownRemark","edges","map","_ref2","key","id","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","HeaderContainer","Logo","MenuDiv","show","MenuText","MenuItem","react_default","gatsby_browser_entry","url","text","MenuButtonDiv","MenuButton","className","onClick","onToggleMenu","index_es","showMenu","faCaretUp","faBars","Menu","_this","_React$Component","call","this","state","toggleMenu","bind","assertThisInitialized_default","toggled","setState","header_MenuItem","header_MenuButton","Component","Header","siteTitle","Fragment","header_Menu","defaultProps","Container","Content","Footer","footer","Layout","header","site","siteMetadata","_755544856","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-29d6f544d5e5e2ab9ca4.js","sourcesContent":["import React from 'react';\nimport { Link,graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faTwitter, faLinkedin } from '@fortawesome/free-brands-svg-icons'\n\n// Container for each post excerpt\nconst PostCard = styled.div`\n  border-bottom: .05em solid #eeeeee;\n  padding:2em;\n  margin:1em;\n  margin-top:0;\n  display:flex;\n  flex-direction:column;\n  box-sizing:border-box;\n\n  a {\n    text-decoration:none;\n    color:white;\n  }\n\n  a:hover{\n    color:#cccccc;\n  }\n`;\n\nconst CardContainer = styled.div`\n  display:flex;\n  flex-direction:column;\n\n  @media (min-width: 1100px) {\n    margin-right:15vw;\n    margin-left:15vw;\n  }\n\n  @media (min-width: 800px) and (max-width: 1100px) {\n    margin-right:15vw;\n    margin-left:15vw;\n  }\n\n  @media (min-width: 200px) and (max-width: 400px) {\n    margin-right: 5vw;\n    margin-left: 5vw;\n  }\n`; \n\n\nconst DateText = styled.div`\n  font-weight:lighter;\n  font-size:0.75em;\n  margin-top:auto;\n  margin-bottom:0;\n`;\n\nconst ReadMore = styled.p`\n  font-weight:300;\n`;\n\n/**\n * Card to display blog posts\n * @param {*} props \n */\nconst FrontPagePost = (props)=>{\n  let node = props.item;\n  return(\n    <PostCard>\n      <Link to={node.fields.slug}><h3> {node.frontmatter.title} </h3></Link>\n      <p> {node.excerpt} </p> \n      <Link to={node.fields.slug}><ReadMore>Read More...</ReadMore></Link>\n      <DateText>{node.frontmatter.date}</DateText>\n    </PostCard>\n  );\n}\n\nconst AccountDiv = styled.div`\n  background:rgba(24, 24, 24);\n  padding:1em;\n  margin-top:1em;\n  border-radius:0.25em;\n  color:white;\n\n  /* desktop */\n  @media (min-width: 701px){ \n    flex-direction:row;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n  }\n\n  /* mobile devices and small screens */\n  @media (max-width: 700px){ \n    display:none;\n  }\n`;\n\nconst AccountButton = styled.p`\n  border:none;\n  background:transparent;\n  font-size:5em;\n  margin:0.25em;\n  cursor:pointer;\n  text-align:center;\n\n  :hover {\n    color:#cccccc;\n  }\n\n  a {\n    text-decoration:none;\n  }\n`;\n\nconst AccountLabel = styled.p`\n  font-size:0.25em;\n  font-weight:lighter;\n`;\n\n/**\n * Div with links to my various social media accounts\n * @param {*} props \n */\nconst AccountLinks = (props) => (\n  <AccountDiv>\n    <AccountButton>\n      <a href=\"https://twitter.com/delsig\">\n        <FontAwesomeIcon icon={faTwitter} />\n        <AccountLabel>@delsig</AccountLabel>\n      </a>\n    </AccountButton>\n    <AccountButton>\n      <a href=\"https://github.com/toastking\">\n        <FontAwesomeIcon icon={faGithub} />\n        <AccountLabel>@toastking</AccountLabel>\n      </a>\n    </AccountButton>\n    <AccountButton>\n      <a href=\"https://www.linkedin.com/in/mattdelsig/\">\n        <FontAwesomeIcon icon={faLinkedin} />\n        <AccountLabel>LinkedIn</AccountLabel>\n      </a>\n    </AccountButton>\n  </AccountDiv>\n);\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Matthew Del Signore\" keywords={[`coder`, `portfolio`, `frontend`, `react`, `gatsby`]} />\n    <AccountLinks/>\n    <CardContainer>\n      {data.allMarkdownRemark.edges.map(({node})=>(\n        <FrontPagePost item={node} key={node.id}/>\n      ))}\n    </CardContainer>\n  </Layout>\n)\n\n export const query = graphql`\n  query {\n    allMarkdownRemark (\n      sort: { fields: [frontmatter___date], order: DESC },\n      limit: 50,\n      # only get the posts, not the markdown pages\n      filter:{\n          frontmatter:{\n            layout:{ eq:\"post\" }\n          }\n        }\n      ){\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields{\n            slug\n          }\n          excerpt(pruneLength: 600)\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faCaretUp } from '@fortawesome/free-solid-svg-icons'\n\n//make divs to style stuff\nconst HeaderContainer = styled.div`\n  display:flex;\n  width:100vw;\n  padding:.25em;\n  background:rgb(24, 24, 24);\n  color:white;\n\n  /* Override the font */\n  font-weight:bold;\n  font-family: 'Roboto Mono', 'sans-serif';\n  vertical-align:middle;\n\n  /* Make it above all the other content\n  and make it partially transparent */\n  position:absolute;\n  opacity:0.8;\n  z-index: 999;\n\n  a {\n    text-decoration:none;\n    color:white;\n  }\n\n  a:visited {\n    color:white;\n  }\n\n  a:hover {\n    color:#cccccc;\n  }\n\n /* desktop */\n  @media (min-width: 701px){ \n    flex-direction:row;\n    align-items:center;\n    min-height:4em;\n  }\n\n  /* mobile devices and small screens */\n  @media (max-width: 700px){ \n    flex-direction:column;\n    align-items:stretch;\n    min-height:3em;\n  }\n`;\n\nconst Logo = styled.div`\n  display:flex;\n  flex-direction:row;\n  margin-right:auto;\n  margin-left:.1em;\n  font-size:1.75em;\n  opacity:1;\n\n  /* mobile devices and small screens */\n  @media (max-width: 700px){ \n    width:100%;\n  }\n`;\n\nconst MenuDiv = styled.div`\n  color:white;\n  font-size:1.25em;\n  opacity:1;\n  text-align:center;\n\n  /* desktop */\n  @media (min-width: 701px){ \n    flex-direction:row;\n    display:flex;\n    align-items:center;\n    margin-right:.5em;\n    margin-left:auto;\n  }\n\n  /* mobile devices and small screens */\n  @media (max-width: 700px){ \n      flex-direction:column;\n      margin-top:.5em;\n      margin-bottom:auto;\n      display:${props => ((props.show) ? 'flex' : 'none')};\n\n      p {\n        padding:0.35em;\n      }\n  }\n`;\n\nconst MenuText = styled.p`\n  margin: auto .25em auto .25em;\n`;\n\nconst MenuItem = (props)=>(\n  <MenuText><Link to={props.url}> {props.text} </Link></MenuText>\n);\n\nconst MenuButtonDiv = styled.div`\n  margin-left:auto;\n  margin-right:.25em;\n\n  .MenuButton {\n    border:none;\n    background:transparent;\n    color:white;\n    cursor:pointer;\n  }\n  \n  .MenuButton :hover {\n    color:#cccccc;\n  }\n\n  /* desktop */\n  @media (min-width: 701px){ \n    display:none;\n  }\n\n  /* mobile devices and small screens */\n  @media (max-width: 700px){ \n      display:block;\n  }\n`;\n\n// Menu Button to show hamburger menu when it's a mobile device \nconst MenuButton = (props) => (\n  <MenuButtonDiv>\n    <button className=\"MenuButton\" onClick={props.onToggleMenu}>\n      <FontAwesomeIcon icon={(props.showMenu) ? faCaretUp : faBars }/>\n    </button>\n  </MenuButtonDiv>\n);\n\n/**\n * Class to handle making the main menu\n */\nclass Menu extends React.Component{\n\n  constructor(props){\n    super(props);\n    //check if we show the menu by default if we're on a mobile device \n    this.state = {\n      showMenu:false,\n    };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  /* Function to handle toggling the menu*/\n  toggleMenu(){\n    let toggled = !this.state.showMenu;\n    this.setState({'showMenu':toggled});\n  }\n\n  render(){\n    return(\n      <HeaderContainer>\n        <Logo>\n          <MenuItem url=\"/\" text={this.props.title} />\n          <MenuButton showMenu = {this.state.showMenu} onToggleMenu={this.toggleMenu}/>\n        </Logo>\n\n        <MenuDiv show={this.state.showMenu}>\n          <MenuItem url=\"/about\" text=\"About\" />\n          <MenuItem url=\"/projects/projects\" text=\"Projects\" />\n          <MenuText><a href=\"/Matthew-Del-Signore-Resume.pdf\">CV</a></MenuText>\n        </MenuDiv>\n      </HeaderContainer>\n    );\n  }\n}\n\nconst Header = ({ siteTitle }) => (\n  <React.Fragment>\n    <Menu title={siteTitle}/>\n  </React.Fragment>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components';\n\nimport Header from './header'\n\nconst Container = styled.div`\n  height:100vh;\n  width:100vw;\n  display:flex;\n  flex-direction:column;\n  background:#495459;\n`;\n\nconst Content = styled.div`\n  flex:1 1 auto;\n  overflow-y:scroll;\n  -webkit-overflow-scrolling: touch;\n  padding:1em;\n  /* padding to take the header into account */\n  padding-top:4em;\n\n  a, a:visited {\n    color:white;\n  }\n`;\n\nconst Footer = styled.footer`\n  font-weight:light;\n  font-size:0.75em;\n  text-align:center;\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Container>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          {children}\n        </Content>\n        <Footer>\n          © Matthew Del Signore 2018, Built with <a href=\"http://www.gatsbyjs.org\">Gatsby</a>\n        </Footer>\n      </Container>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}